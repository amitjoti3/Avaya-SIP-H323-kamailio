 
 ​#​Kamailio config for proxying Avaya phones into a 3CX PBX 
 ​#​Should work for any SIP call control platform 
  
 ​#​!define PBX_IP "YOUR_PBX_IP" 
  
 ​#​Voluntarily set listen IP address if you don't want to listen on all interfaces 
 ​#​Proxy will bind to UDP and TCP 
 ​#​Avaya phones can only use TCP 
 ​listen​=YOUR_PROXY_IP:YOUR_PROXY_PORT 
  
 ​#​This keeps TCP connections open long enough for Avaya phones to register again in my environment 
 ​tcp_connection_lifetime​=1200 
  
 ​loadmodule ​"​pv.so​" 
 ​loadmodule ​"​sl.so​" 
 ​loadmodule ​"​textops.so​" 
 ​loadmodule ​"​xlog.so​" 
 ​loadmodule ​"​db_postgres.so​" 
 ​loadmodule ​"​sqlops.so​" 
  
 ​#​This section is only needed if you want to query contacts out of 3CX to display for outbound calls 
 ​modparam(​"​sqlops​"​,​"​sqlcon​"​,​"​3cx=>postgres://POSTGRES_USER:POSTGRES_PASSWORD@YOUR_3CX_SERVER/YOUR_3CX_DATABASE​"​) 
 ​modparam(​"​sqlops​"​,​"​sqlres​"​,​"​response​"​) 
  
 ​request_route { 
 ​  ​#​Avaya phones SUBSCRIBE to 5 different events, avaya-cm-feature-status, reg, avaya-ccs-profile, message-summary, and dialog 
 ​  ​#​If the phone is successfully SUBSCRIBEd to avaya-cm-feature-status, it will be in "AST" mode and will contact the PPM server 
 ​  ​#​If you want to go down this road, uncomment this section, the proxy will respond to the event instead of the PBX but 
 ​  ​#​message-summary will be forwarded to the PBX 
 ​  ​#​You will need a PPM Server otherwise you will have less functionality than in the "SIPPING 19" mode 
 ​  ​#​if (is_method("SUBSCRIBE") && $hdr(Event) != "message-summary") { 
 ​    ​#​if ($hdr(Event) == "avaya-cm-feature-status") { 
 ​      ​#​Send 200 OK to make the phone start sending SOAP requests to the web server 
 ​      ​#​This contact header must be here or the phone will not start making PPM requests 
 ​      ​#​append_to_reply("Contact: <sip:" + PBX_IP + ":5060>\r\n"); 
 ​      ​#​sl_send_reply("200", "OK"); 
 ​      ​#​exit; 
 ​    ​#​} 
 ​    ​#​There are 3 other events the phone will try to subscribe to, disregard them all 
 ​    ​#​else { 
 ​      ​#​sl_send_reply("489", "Bad Event"); 
 ​      ​#​exit; 
 ​    ​#​} 
 ​  ​#​} 
 ​   
 ​  ​#​In "AST" mode, Avaya phones send an INVITE on off-hook to "ask for dialtone", sending 183 makes it happy 
 ​  ​#​if (is_method("INVITE") && $ru =~ "avaya-cm-fnu=off-hook") { 
 ​    ​#​sl_send_reply("183", "Session Progress"); 
 ​    ​#​exit; 
 ​  ​#​} 
  
 ​  ​#​Avaya phones need this P-Asserted-Identity header present to display caller name, check if INVITE came from PBX and add it 
 ​  ​#​Only do this if there is a display name in the From: header 
 ​  if (is_method(​"​INVITE​"​) && $​si​ == PBX_IP && $fn != $null) { 
 ​    append_hf(​"​P-Asserted-Identity: ​"​"​$fn​"​"​\r\n​"​)​; 
 ​  } 
  
 ​  ​#​Forward all traffic to its normal destination unless specified earlier 
 ​  forward()​; 
 ​} 
  
 ​#​This section is only needed if you want to query contacts out of 3CX to display for outbound calls 
 ​#​Since there's no way to put a contacts list on the phone in "SIPPING 19" mode, this helps people see who they called 
 ​onreply_route { 
 ​  if (is_method(​"​INVITE​"​) && $​si​ == PBX_IP) { 
 ​    ​#​These are the default voicemail numbers in 3CX 
 ​    if ($​tU​ == ​"​9999​"​ || $​tU​ == ​"​*4​"​) { 
 ​      append_hf(​"​P-Asserted-Identity: \​"​Voicemail\​"​\r\n​"​)​; 
 ​    } 
 ​    else { 
 ​      ​#​This first query can be used if you only want to query extensions instead of contacts 
 ​      ​#​sql_query("3cx", "SELECT display_name FROM users_view WHERE dn='$tU'", "response"); 
 ​      sql_query(​"​3cx​"​, ​"​SELECT CONCAT(TRIM(firstname), ' ', TRIM(lastname)) FROM phonebook WHERE pv_an3='$tU'​"​, ​"​response​"​)​; 
 ​      if ($dbr(​response​=>rows) == 1) { 
 ​        append_hf(​"​P-Asserted-Identity: ​"​"​$dbr(response=>[0,0])​"​"​\r\n​"​)​; 
 ​      } 
 ​      ​#​Kamailio documentation says to do this 
 ​      sql_result_free(​"​response​"​)​; 
 ​    } 
 ​  } 
 ​}

